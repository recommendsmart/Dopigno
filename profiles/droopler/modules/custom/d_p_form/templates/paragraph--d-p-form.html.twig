{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
] %}
{% set paragraph_classes = [
  'paragraph-d-form',
] %}

{% set d_p_form_placement = d_p_form_placement|default('bottom') %}

{% if d_p_form_placement == 'bottom' %}
  {% set row_classes = '' %}
  {% set content_classes = 'col-md-8' %}
  {% set form_classes = 'col-md-8' %}
{% endif %}
{% if d_p_form_placement == 'right' %}
  {% set row_classes = '' %}
  {% set content_classes = 'col-md-5 col-12' %}
  {% set form_classes = 'col-md-7 col-12' %}
{% endif %}
{% if d_p_form_placement == 'left' %}
  {% set row_classes = '' %}
  {% set content_classes = 'col-md-5 col-12 order-1 order-md-2' %}
  {% set form_classes = 'col-md-7 col-12 order-md-1 order-2' %}
{% endif %}

{% block paragraph %}
  <section {{ wrapper_attributes }}>
    <div{{ attributes.addClass(classes) }}>
      <div {{ paragraph_attributes.addClass(paragraph_classes) }}>
        {% block background %}
          {% include '@d_media/d-background-media.html.twig' with {
            content: content.group_d_form_background
          } only %}
        {% endblock %}
        <div class="content-wrapper">
          <div class="container">
            <div class="row justify-content-center {{ d_p_form_placement }} {{ row_classes }}">
              <div class="content {{ content_classes }}">
                {% block content %}
                  {{ content.group_d_form_content }}
                {% endblock %}
              </div>
              <div class="form {{ form_classes }}">
                {% block form %}
                  {{ content.group_d_form_fields }}
                {% endblock %}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
{% endblock paragraph %}
