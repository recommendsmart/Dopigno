<?php

/**
 * @file
 * Contains d_paragraphs_text_blocks.module..
 */

use Drupal\d_p\Helper\ParagraphModifiersHelper;

/**
 * Implements hook_theme().
 */
function d_p_text_blocks_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__d_p_group_of_text_blocks' => [
      'base hook' => 'paragraph',
    ],
    'paragraph__d_p_single_text_block' => [
      'base hook' => 'paragraph',
    ],
    'field__field_d_p_tb_block_reference' => [
      'base hook' => 'field',
    ],
  ];
}

/**
 * Implements hook_preprocess_field().
 */
function d_p_text_blocks_preprocess_field(&$variables) {
  if ($variables['element']['#entity_type'] == 'paragraph') {
    if ($variables['element']['#bundle'] == 'd_p_group_of_text_blocks') {
      if ($variables['field_name'] == 'field_d_p_tb_block_reference') {

        $paragraph_modifiers_helper = new ParagraphModifiersHelper($variables['element']['#object']);

        /** @var \Drupal\Core\Field\FieldItemList $num_field */
        $num_field = $variables['element']['#object']->get('field_d_number');

        $items_per_row = $num_field->isEmpty() ? 3 : $num_field->first()->get('value')->getValue();
        $columns = floor(12 / $items_per_row);
        $variables['column_class'] = 'col-sm-' . $columns;

        if ($paragraph_modifiers_helper->hasClass('with-grid')) {
          $variables['column_class'] = '';

          foreach ($variables['items'] as $idx => $list_item) {
            /** @var \Drupal\Core\Template\Attribute $atr */
            $item_attributes = $variables['items'][$idx]['attributes'];
            $item_attributes->addClass('col-sm-6');
            if (($idx + 1) % $items_per_row == 0) {
              $item_attributes->addClass('grid-row-end-item');;
            }
            if (count($variables['items']) % $items_per_row != 0 && $idx >= count($variables['items']) - count($variables['items']) % $items_per_row) {
              $item_attributes->addClass('col-lg-6');
            }
            else {
              $item_attributes->addClass('col-lg-' . $columns);
            }
          }
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function d_p_text_blocks_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];
  $bundle = $paragraph->bundle();

  switch ($bundle) {
    case 'd_p_single_text_block':
      $paragraphModifiersHelper = new ParagraphModifiersHelper($paragraph);
      if ($paragraphModifiersHelper->hasClass('with-price')) {
        $variables['with_price'] = TRUE;
      }
      // Set background image if field is not empty.
      // This overrides background color settings.
      $field_image = $paragraph->get('field_d_media_background')->first();
      if (!empty($field_image)) {
        $variables['image_class'] = $variables['text_class'] = 'col-md-12';
      }
      break;
  }
}

/**
 * Implements hook_d_p_centered_ckeditor_widget_paragraphs().
 */
function d_p_text_blocks_d_p_centered_ckeditor_widget_paragraphs(array &$paragraph_types) {
  $paragraph_types[] = 'd_p_group_of_text_blocks';
}
